# ConvoCanvas + LibreChat Complete Integration
# Docker Compose setup with all services
version: '3.8'

services:
  # LibreChat Main Application
  api:
    container_name: LibreChat
    ports:
      - "${PORT:-3080}:${PORT:-3080}"
    depends_on:
      - mongodb
      - rag_api
    image: ghcr.io/danny-avila/librechat-dev:latest
    restart: always
    user: "${UID:-1000}:${GID:-1000}"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - HOST=0.0.0.0
      - MONGO_URI=mongodb://mongodb:27017/LibreChat
      - MEILI_HOST=http://meilisearch:7700
      - RAG_PORT=${RAG_PORT:-8000}
      - RAG_API_URL=http://rag_api:${RAG_PORT:-8000}
    volumes:
      - type: bind
        source: ./.env
        target: /app/.env
      - ./images:/app/client/public/images
      - ./uploads:/app/uploads
      - ./logs:/app/api/logs
      # ConvoCanvas Integration - Read-only access to processed files
      - /path/to/your/obsidian/vault:/app/data/obsidian:ro

  # MongoDB Database
  mongodb:
    container_name: chat-mongodb
    image: mongo
    restart: always
    user: "${UID:-1000}:${GID:-1000}"
    volumes:
      - ./data-node:/data/db
    command: mongod --noauth

  # Meilisearch for Full-Text Search
  meilisearch:
    container_name: chat-meilisearch
    image: getmeili/meilisearch:v1.12.3
    restart: always
    user: "${UID:-1000}:${GID:-1000}"
    environment:
      - MEILI_HOST=http://meilisearch:7700
      - MEILI_NO_ANALYTICS=true
      - MEILI_MASTER_KEY=${MEILI_MASTER_KEY}
    volumes:
      - ./meili_data_v1.12:/meili_data

  # PostgreSQL with pgvector for RAG
  vectordb:
    container_name: vectordb
    image: ankane/pgvector:latest
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    restart: always
    volumes:
      - pgdata2:/var/lib/postgresql/data

  # RAG API for Document Processing
  rag_api:
    container_name: rag_api
    image: ghcr.io/danny-avila/librechat-rag-api-dev:latest
    environment:
      - DB_HOST=vectordb
      - RAG_PORT=${RAG_PORT:-8000}
    restart: always
    depends_on:
      - vectordb
    env_file:
      - .env

  # ConvoCanvas Backend (Optional Integration)
  convocanvas:
    build:
      context: ../../
      dockerfile: Dockerfile
    container_name: convocanvas-api
    ports:
      - "8001:8000"
    volumes:
      # Process LibreChat conversations
      - ./logs:/app/data/librechat-logs:ro
      # Output processed content
      - /path/to/your/obsidian/vault:/app/data/obsidian
    environment:
      - LIBRECHAT_LOGS_PATH=/app/data/librechat-logs
      - OBSIDIAN_VAULT_PATH=/app/data/obsidian
    depends_on:
      - api

volumes:
  pgdata2: